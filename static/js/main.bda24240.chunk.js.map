{"version":3,"sources":["components/layout/Navbar.js","components/layout/MobileMenuDrawer.js","components/common/SkeletonLoader.js","utils/data/pokemonTypes.js","components/filterSection/PokemonTypesBtn.js","redux/actions/pokemonsActions.js","redux/actions/asyncActions.js","utils/constants/asyncReducerConstants.js","utils/constants/urlConstants.js","utils/constants/pokemonsReducerConstants.js","components/filterSection/SortSelect.js","utils/constants/sortTypeConstants.js","components/filterSection/ShowPageSelect.js","components/filterSection/DesktopFilterSection.js","components/filterSection/MobileFilterModal.js","components/common/PokemonAvatar.js","components/pokemonList/PokemonCard.js","components/pokemonList/PokemonList.js","components/pokemonList/PokemonPagination.js","views/RootView.js","components/singlePokemon/AboutDetails.js","components/singlePokemon/PokemonName.js","components/singlePokemon/Subtitle.js","utils/constants/pokemonBaseStats.js","utils/helperFunctions.js","components/singlePokemon/StatisticsBar.js","views/PokemonView.js","views/InfoView.js","views/SearchView.js","views/NoMatch.js","App.js","redux/reducers/pokemonsReducer.js","redux/reducers/asyncReducer.js","redux/reducers/index.js","serviceWorker.js","index.js"],"names":["Navbar","handleDrawerToggle","classes","useStyles","AppBar","position","className","appBar","Toolbar","Hidden","lgUp","IconButton","color","aria-label","edge","onClick","menuButton","Container","disableGutters","Box","display","alignItems","to","Typography","flexGrow","mdDown","mr","makeStyles","theme","zIndex","drawer","marginRight","spacing","drawerPaper","maxWidth","width","closeButton","top","left","MobileMenuDrawer","mobileOpen","Drawer","variant","open","onClose","paper","List","ListItem","button","ListItemText","primary","SkeletonLoader","number","skeletonArr","i","push","Skeleton","key","animation","height","pokemonTypes","name","url","btn","borderColor","PokemonTypesBtn","onClickFn","btnType","useSelector","state","pokemons","formOptions","type","Grid","container","map","item","xs","lg","Button","disabled","getPokemonsInit","dispatch","a","axios","get","response","payload","results","data","count","setPagination","getPokemonsType","pokemon","length","currentPage","SortSelect","sortType","sort","useDispatch","pokemonsType","FormControl","formControl","InputLabel","id","Select","labelId","value","onChange","event","target","MenuItem","marginTop","minWidth","breakpoints","up","ShowPageSelect","pageLimit","setPageLimit","flexShrink","DesktopFilterSection","mt","mb","MobileFilterModal","useState","isOpen","setIsOpen","handleClose","Dialog","fullScreen","TransitionComponent","Transition","backgroundColor","dialog","React","forwardRef","props","ref","Slide","direction","img","size","icon","PokemonAvatar","pokemonID","src","alt","loader","justifyContent","unloader","card","textAlign","typography","fontWeight","fontSize","PokemonCard","substring","sm","md","Card","CardActionArea","pathname","pokemonUrl","CardContent","component","PokemonList","pokemonListForRender","hasOwnProperty","PokemonPagination","totalPages","pokemonPagination","Pagination","boundaryCount","shape","siblingCount","page","RootView","isLoading","async","isError","useEffect","root","content","property","AboutDetails","PokemonName","align","textTransform","subtitle","Subtitle","Divider","POKEMON_MAX_BASE_STATS","hp","attack","defense","speed","calculateStatsToPercentages","statValue","statName","statisticsBar","borderRadius","statisticsBarValue","padding","boxSizing","StatisticsBar","style","marginBottom","statisticsName","PokemonView","singlePokemon","pokemonName","match","params","getSinglePokemon","stats","stat","base_stat","types","abilities","ability","InfoView","box","gutterBottom","href","rel","link","input","SearchView","pokemonsFound","searchTxt","setSearchTxt","isSubmit","setIsSubmit","onSubmit","e","preventDefault","form","InputBase","autoFocus","placeholder","inputProps","Alert","severity","NoMatch","App","setMobileOpen","exact","path","Search","initialState","allPokemons","pokemonList","pokemonsCount","compare","b","A","toUpperCase","B","comparison","pokemonsReducer","action","offset","Math","ceil","slice","filter","trim","indexOf","asyncReducer","combineReducers","Boolean","window","location","hostname","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mXA2DeA,EA5CA,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,mBACVC,EAAUC,IAChB,OACE,oCACE,kBAACC,EAAA,EAAD,CAAQC,SAAS,QAAQC,UAAWJ,EAAQK,QAC1C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQC,MAAI,GACV,kBAACC,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,mBACXC,KAAK,QACLC,QAASd,EACTK,UAAWJ,EAAQc,YAEnB,kBAAC,IAAD,QAGJ,kBAACC,EAAA,EAAD,CAAWC,gBAAc,GACvB,kBAACC,EAAA,EAAD,CAAKC,QAAQ,OAAOC,WAAW,UAC7B,kBAAC,IAAD,CAAMC,GAAG,KACP,kBAACC,EAAA,EAAD,qBAGF,kBAACJ,EAAA,EAAD,CAAKK,SAAU,IAEf,kBAACf,EAAA,EAAD,CAAQgB,QAAM,GACZ,kBAACN,EAAA,EAAD,CAAKO,GAAI,GACP,kBAAC,IAAD,CAAMJ,GAAG,WACP,kBAACC,EAAA,EAAD,uBAGJ,kBAAC,IAAD,CAAMD,GAAG,SACP,kBAACC,EAAA,EAAD,yBAOZ,kBAACf,EAAA,EAAD,QAOAL,EAAYwB,aAAW,SAACC,GAAD,MAAY,CACvCrB,OAAQ,CACNsB,OAAQD,EAAMC,OAAOC,OAAS,GAEhCd,WAAY,CACVe,YAAaH,EAAMI,QAAQ,Q,qDCXzB7B,EAAYwB,aAAW,SAACC,GAAD,MAAY,CACvCK,YAAa,CACXC,SAAU,IACVC,MAAO,QAETC,YAAa,CACX/B,SAAU,QACVgC,IAAK,EACLC,KAAM,QAIKC,EAtDU,SAAC,GAAwC,IAAtCC,EAAqC,EAArCA,WAAYvC,EAAyB,EAAzBA,mBAChCC,EAAUC,IAChB,OACE,kBAACsC,EAAA,EAAD,CACEC,QAAQ,YACRC,KAAMH,EACNI,QAAS3C,EACTC,QAAS,CACP2C,MAAO3C,EAAQ+B,cAGjB,kBAACzB,EAAA,EAAD,MACA,kBAACG,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,oBACXC,KAAK,QACLC,QAASd,EACTK,UAAWJ,EAAQkC,aAEnB,kBAAC,IAAD,OAEF,kBAACU,EAAA,EAAD,KACE,kBAAC,IAAD,CAAMxB,GAAG,IAAIP,QAASd,GACpB,kBAAC8C,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,CAAcC,QAAQ,4BAG1B,kBAAC,IAAD,CAAM5B,GAAG,UAAUP,QAASd,GAC1B,kBAAC8C,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,CAAcC,QAAQ,mBAG1B,kBAAC,IAAD,CAAM5B,GAAG,QAAQP,QAASd,GACxB,kBAAC8C,EAAA,EAAD,CAAUC,QAAM,GACd,kBAACC,EAAA,EAAD,CAAcC,QAAQ,oB,gBChCnBC,EAZQ,SAAC,GAGtB,IAHsC,IAAdC,EAAa,EAAbA,OAClBC,EAAc,GAEXC,EAAI,EAAGA,EAAIF,EAAQE,IAC1BD,EAAYE,KACV,kBAACC,EAAA,EAAD,CAAUC,IAAKH,EAAGI,UAAU,OAAOhB,QAAQ,OAAOiB,OAAQ,MAI9D,OAAO,oCAAGN,I,kBCkEGO,EA9EM,CACnB,CACEC,KAAM,OAER,CACEA,KAAM,SACNC,IAAK,qCAEP,CACED,KAAM,WACNC,IAAK,qCAEP,CACED,KAAM,SACNC,IAAK,qCAEP,CACED,KAAM,SACNC,IAAK,qCAEP,CACED,KAAM,SACNC,IAAK,qCAEP,CACED,KAAM,OACNC,IAAK,qCAEP,CACED,KAAM,MACNC,IAAK,qCAEP,CACED,KAAM,QACNC,IAAK,qCAEP,CACED,KAAM,QACNC,IAAK,qCAEP,CACED,KAAM,OACNC,IAAK,sCAEP,CACED,KAAM,QACNC,IAAK,sCAEP,CACED,KAAM,QACNC,IAAK,sCAEP,CACED,KAAM,WACNC,IAAK,sCAEP,CACED,KAAM,UACNC,IAAK,sCAEP,CACED,KAAM,MACNC,IAAK,sCAEP,CACED,KAAM,SACNC,IAAK,sCAEP,CACED,KAAM,OACNC,IAAK,sCAEP,CACED,KAAM,QACNC,IAAK,uCC9CH3D,EAAYwB,aAAW,SAACC,GAAD,MAAY,CACvCmC,IAAK,CACHC,YAAa,eAIFC,EA3BS,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UACnBC,EAAUC,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASC,YAAYC,QAC5DtE,EAAUC,IAChB,OACE,kBAACsE,EAAA,EAAD,CAAMC,WAAS,EAAC1C,QAAS,GACtB4B,EAAae,KAAI,SAACZ,GAAD,OAChB,kBAACU,EAAA,EAAD,CAAMhB,IAAKM,EAAIF,KAAMe,MAAI,EAACC,GAAI,EAAGC,GAAI,GACnC,kBAACC,EAAA,EAAD,CACErC,QAAQ,WACRpC,UAAWJ,EAAQ6D,IACnBiB,SAAUb,IAAYJ,EAAIF,KAC1B9C,QAAS,kBAAMmD,EAAUH,EAAIF,KAAME,EAAID,OAEtCC,EAAIF,Y,sFCOV,SAASoB,IACd,8CAAO,WAAgBC,GAAhB,eAAAC,EAAA,6DACLD,ECtBK,CACLV,KCR8B,uBF4BzB,kBAGoBY,IAAMC,IG/BH,gDH4BvB,OAGGC,EAHH,OAIHJ,ECnBG,CACLV,KCb+B,wBFgC7BU,EAAS,CACPV,KIlC8B,yBJmC9Be,QAAS,CACPC,QAASF,EAASG,KAAKD,QACvBE,MAAOJ,EAASG,KAAKC,SAGzBR,EAASS,EAAc,IAZpB,kDAcHT,ECvBG,CACLV,KClB8B,uBF0BzB,0DAAP,sDAmBK,SAASoB,EAAgB9B,EAAKD,GACnC,8CAAO,WAAgBqB,GAAhB,eAAAC,EAAA,6DACLD,EC1CK,CACLV,KCR8B,uBFgDzB,kBAGoBY,IAAMC,IAAIvB,GAH9B,OAGGwB,EAHH,OAIHJ,ECvCG,CACLV,KCb+B,wBFoD7BU,EAAS,CACPV,KIrDmC,8BJsDnCe,QAAS,CACPM,QAASP,EAASG,KAAKI,QACvBH,MAAOJ,EAASG,KAAKI,QAAQC,OAC7BjC,KAAMA,EACNC,IAAKA,KAGToB,EAASS,EAAc,IAdpB,kDAgBHT,EC7CG,CACLV,KClB8B,uBF8CzB,0DAAP,sDAqCK,SAASmB,EAAcI,GAC5B,MAAO,CACLvB,KIrF+B,sBJsF/Be,QAASQ,GKhFb,IA4BeC,EA5BI,WACjB,IAAMC,EAAW7B,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASC,YAAY2B,QAC7DhB,EAAWiB,cACXC,EAAehC,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASC,YAAYC,QACjEV,EAAMM,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASC,YAAYT,OACxDD,EAAOO,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAASC,YAAYV,QACzD3D,EAAUC,IAKhB,OACE,kBAACkG,EAAA,EAAD,CAAa3D,QAAQ,SAASpC,UAAWJ,EAAQoG,aAC/C,kBAACC,EAAA,EAAD,CAAYC,GAAG,cAAf,UACA,kBAACC,EAAA,EAAD,CACEC,QAAQ,aACRF,GAAG,oBACHG,MAAOV,EACPW,SAXe,SAACC,GACpB3B,EL4EG,SAAce,EAAUG,EAActC,EAAKD,GAChD,MM7FmB,UN6FfoC,EACmB,QAAjBG,EACK,SAAClB,GACNA,EAASD,MAGJ,SAACC,GACNA,EAASU,EAAgB9B,EAAKD,KAK7B,SAACqB,GACNA,EAAS,CAAEV,KItGK,OJsGOe,QAASU,IAChCf,EAASS,EAAc,KK3FdO,CAAKW,EAAMC,OAAOH,MAAOP,EAActC,EAAKD,MAYjD,kBAACkD,EAAA,EAAD,CAAUJ,MC5BG,SD4Bb,kBACA,kBAACI,EAAA,EAAD,CAAUJ,MC5BC,OD4BX,aACA,kBAACI,EAAA,EAAD,CAAUJ,MC5BC,OD4BX,gBAQFxG,EAAYwB,aAAW,SAACC,GAAD,MAAY,CACvC0E,YAAY,aACVvE,YAAaH,EAAMI,QAAQ,GAC3BgF,UAAWpF,EAAMI,QAAQ,GACzBiF,SAAU,KACTrF,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BF,SAAU,UERDG,EA7BQ,WACrB,IAAMlC,EAAWiB,cAEXkB,EAAYjD,aAChB,SAACC,GAAD,OAAWA,EAAMC,SAASC,YAAY8C,aAElCnH,EAAUC,KAKhB,OACE,kBAACkG,EAAA,EAAD,CAAa3D,QAAQ,SAASpC,UAAWJ,EAAQoG,aAC/C,kBAACC,EAAA,EAAD,CAAYC,GAAG,cAAf,sBACA,kBAACC,EAAA,EAAD,CACEC,QAAQ,aACRF,GAAG,oBACHG,MAAOU,EACPT,SAXe,SAACC,GACpB3B,EPgGG,SAAsBmC,GAC3B,OAAO,SAAUnC,GACfA,EAAS,CACPV,KI7GwB,iBJ8GxBe,QAAS8B,IAEXnC,EAASS,EAAc,KOtGd2B,CAAaT,EAAMC,OAAOH,UAY/B,kBAACI,EAAA,EAAD,CAAUJ,MAAO,IAAjB,MACA,kBAACI,EAAA,EAAD,CAAUJ,MAAO,IAAjB,MACA,kBAACI,EAAA,EAAD,CAAUJ,MAAO,IAAjB,MACA,kBAACI,EAAA,EAAD,CAAUJ,MAAO,IAAjB,SAQFxG,GAAYwB,aAAW,SAACC,GAAD,MAAY,CACvC0E,YAAY,aACVvE,YAAaH,EAAMI,QAAQ,GAC3BgF,UAAWpF,EAAMI,QAAQ,GACzBiF,SAAU,KACTrF,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BF,SAAU,UCCV9G,GAAYwB,aAAW,SAACC,GAAD,MAAY,CACvCE,OAAQ,CACNK,MAAO,IACPoF,WAAY,GAEdtF,YAAa,CACXE,MAAO,SAIIqF,GA1Cc,WAC3B,IAAMtH,EAAUC,KACV+E,EAAWiB,cAOjB,OACE,yBAAK7F,UAAWJ,EAAQ4B,OAAQjB,aAAW,0BACzC,kBAAC4B,EAAA,EAAD,CACEC,QAAQ,YACRxC,QAAS,CACP2C,MAAO3C,EAAQ+B,cAGjB,kBAACzB,EAAA,EAAD,MACA,kBAACS,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAKsG,GAAI,GACP,kBAACtG,EAAA,EAAD,CAAKuG,GAAI,GACP,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAAiBxD,UArBA,SAACL,EAAMC,GAE5BoB,EADK,QAATrB,EACaoB,IACAW,EAAgB9B,EAAKD,Y,oBCyDvB8D,GAtDW,WACxB,IAAMzH,EAAUC,KADc,EAEFyH,oBAAS,GAFP,mBAEvBC,EAFuB,KAEfC,EAFe,KAGxB5C,EAAWiB,cAKX4B,EAAc,WAClBD,GAAU,IAUZ,OACE,oCACE,kBAAC/C,EAAA,EAAD,CAAQrC,QAAQ,YAAY3B,QAjBR,WACtB+G,GAAU,KAgBR,qBAGA,kBAACE,GAAA,EAAD,CACEC,YAAU,EACVtF,KAAMkF,EACNK,oBAAqBC,GACrBvF,QAASmF,GAET,kBAAC3H,EAAA,EAAD,CAAQC,SAAS,QAAQC,UAAWJ,EAAQK,QAC1C,kBAACC,EAAA,EAAD,KACE,kBAACG,EAAA,EAAD,CACEC,MAAM,UACNC,aAAW,2BACXC,KAAK,QACLC,QAASgH,GAET,kBAAC,IAAD,OAEF,kBAACxG,EAAA,EAAD,+BAGJ,kBAACf,EAAA,EAAD,MACA,kBAACS,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAKsG,GAAI,GACP,kBAAC,EAAD,CAAiBvD,UAlCA,SAACL,EAAMC,GAChCgE,GAAU,GAEN5C,EADK,QAATrB,EACaoB,IACAW,EAAgB9B,EAAKD,YAwChC1D,GAAYwB,aAAW,SAACC,GAAD,MAAY,CACvCrB,OAAQ,CACN6H,gBAAiB,WAEnBrE,IAAK,CACHC,YAAa,WAEfqE,OAAQ,CACNlG,MAAO,SAILgG,GAAaG,IAAMC,YAAW,SAAoBC,EAAOC,GAC7D,OAAO,kBAACC,GAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASD,O,wEClDvCrI,GAAYwB,aAAW,iBAAO,CAClCiH,IAAK,SAACC,GAAD,MAAW,CACd1G,MAAO0G,EAAKA,KACZlF,OAAQkF,EAAKA,KACbzH,QAAS,iBAEX0H,KAAM,SAACD,GAAD,MAAW,CACf1G,MAAO0G,EAAKA,KACZlF,OAAQkF,EAAKA,WAIFE,GA9CO,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,UAAWnF,EAAiB,EAAjBA,KAAMgF,EAAW,EAAXA,KAClC3I,EAAUC,GAAU,CAAE0I,KAAMA,IAY5B/E,EAAG,2EAAuEkF,EAAvE,QACT,OACE,kBAAC,KAAD,CACE1I,UAAWJ,EAAQ0I,IACnBK,IAAKnF,EACLoF,IAAG,UAAKrF,EAAL,UACHsF,OACE,kBAAChI,EAAA,EAAD,CAAKC,QAAQ,OAAOgI,eAAe,SAAS/H,WAAW,UACrD,kBAACmC,EAAA,EAAD,CACEE,UAAU,OACVhB,QAAQ,OACRP,MAAO0G,EACPlF,OAAQkF,KAIdQ,SAAU,kBAAC,KAAD,CAAW/I,UAAWJ,EAAQ4I,UCWxC3I,GAAYwB,aAAW,SAACC,GAAD,MAAY,CACvC0H,KAAM,CACJlB,gBAAiB,UACjBmB,UAAW,SACXlJ,SAAU,WACVsD,OAAQ,QAEV6F,WAAY,CACVC,WAAY,IACZC,SAAU,UACV1C,UAAW,OAIA2C,GAhDK,SAAC,GAAmB,IAAjB9F,EAAgB,EAAhBA,KAAMC,EAAU,EAAVA,IACrB5D,EAAUC,KAEV6I,EAAYlF,EAAI8F,UAAU,GAAI9F,EAAIgC,OAAS,GAEjD,OACE,kBAACrB,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGgF,GAAI,EAAGC,GAAI,EAAGhF,GAAI,GAClC,kBAACiF,GAAA,EAAD,CAAMzJ,UAAWJ,EAAQoJ,MACvB,kBAACU,GAAA,EAAD,KACE,kBAAC,IAAD,CACE1I,GAAI,CACF2I,SAAS,YAAD,OAAcpG,GACtBQ,MAAO,CACL6F,WAAYpG,KAIhB,kBAACqG,GAAA,EAAD,KACE,kBAAC,GAAD,CAAetB,KAAM,IAAKG,UAAWA,EAAWnF,KAAMA,IACtD,kBAACtC,EAAA,EAAD,CACEmB,QAAQ,KACR0H,UAAU,KACV9J,UAAWJ,EAAQsJ,YAElB3F,SCPFwG,GA1BK,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,qBACrB,OACE,kBAAC7F,EAAA,EAAD,CAAMC,WAAS,EAAC1C,QAAS,GACtBsI,EAAqB3F,KAAI,SAACkB,GAAD,OACxB,kBAAC,GAAD,CACEpC,IACEoC,EAAQ0E,eAAe,WACnB1E,EAAQA,QAAQhC,KAChBgC,EAAQhC,KAEdA,KACEgC,EAAQ0E,eAAe,WACnB1E,EAAQA,QAAQhC,KAChBgC,EAAQhC,KAEdC,IACE+B,EAAQ0E,eAAe,WACnB1E,EAAQA,QAAQ/B,IAChB+B,EAAQ/B,W,UCST0G,GAzBW,WACxB,IAAMtF,EAAWiB,cACXsE,EAAarG,aACjB,SAACC,GAAD,OAAWA,EAAMC,SAASoG,kBAAkBD,cAExC1E,EAAc3B,aAClB,SAACC,GAAD,OAAWA,EAAMC,SAASoG,kBAAkB3E,eAK9C,OACE,oCACE,kBAAC4E,GAAA,EAAD,CACE/D,SANe,SAACC,EAAOF,GAC3BzB,EAASS,EAAcgB,KAMnBjB,MAAO+E,EACPG,cAAe,EACfC,MAAM,UACNC,aAAc,EACdC,KAAMhF,MC8CCiF,GAzDE,WACf,IAAM9F,EAAWiB,cACX8E,EAAY7G,aAAY,SAACC,GAAD,OAAWA,EAAM6G,MAAMD,aAC/CE,EAAU/G,aAAY,SAACC,GAAD,OAAWA,EAAM6G,MAAMC,WAC7Cb,EAAuBlG,aAC3B,SAACC,GAAD,OAAWA,EAAMC,SAASgG,wBAEtBI,EAAoBtG,aACxB,SAACC,GAAD,OAAWA,EAAMC,SAASoG,qBAGtBxK,EAAUC,KAMhB,OAJAiL,qBAAU,WACRlG,EAASD,OACR,CAACC,IAGF,yBAAK5E,UAAWJ,EAAQmL,MACtB,kBAAC5K,EAAA,EAAD,CAAQgB,QAAM,GACZ,kBAAC,GAAD,OAEF,0BAAMnB,UAAWJ,EAAQoL,SACvB,kBAACrK,EAAA,EAAD,KACGkK,EAAU,+DAAgC,KAC3C,kBAAChK,EAAA,EAAD,CAAKC,QAAQ,OAAOC,WAAW,SAASoG,GAAI,GAC1C,kBAAChH,EAAA,EAAD,CAAQC,MAAI,GACV,kBAAC,GAAD,OAEF,kBAACS,EAAA,EAAD,CAAKK,SAAS,MACd,kBAACD,EAAA,EAAD,eACUmJ,EAAkB3E,YAD5B,KAEG2E,EAAkBD,aAGvB,kBAAChK,EAAA,EAAD,CAAQC,MAAI,GACV,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEDuK,EACC,kBAAC,EAAD,CAAgB7H,OAAQ,KAExB,oCACE,kBAACjC,EAAA,EAAD,CAAKsG,GAAI,EAAGC,GAAI,GACd,kBAAC,GAAD,CAAa4C,qBAAsBA,KAErC,kBAACnJ,EAAA,EAAD,CAAKC,QAAQ,OAAOgI,eAAe,SAAS3B,GAAI,EAAGC,GAAI,GACrD,kBAAC,GAAD,YAYVvH,GAAYwB,aAAW,SAACC,GAAD,MAAY,CACvCyJ,KAAM,CACJjK,QAAS,QAEXkK,QAAS,CACP9J,SAAU,OChERrB,GAAYwB,aAAW,SAACC,GAAD,MAAY,CACvC2J,SAAU,CACR9B,WAAY,MACZ7I,MAAO,UACPuB,MAAO,KAETwE,MAAO,CACL8C,WAAY,SAID+B,GArBM,SAAC,GAAwB,IAAtB3F,EAAqB,EAArBA,QAASc,EAAY,EAAZA,MACzBzG,EAAUC,KAChB,OACE,kBAACgB,EAAA,EAAD,CAAKsG,GAAI,EAAGrG,QAAQ,QAClB,kBAACG,EAAA,EAAD,CAAYjB,UAAWJ,EAAQqL,UAAW5E,EAA1C,KACA,kBAACpF,EAAA,EAAD,CAAYjB,UAAWJ,EAAQyG,OAAQd,EAAQc,MCStC8E,GAdK,SAAC,GAAc,IAAZ5H,EAAW,EAAXA,KACf3D,EAAUC,KAChB,OACE,kBAACoB,EAAA,EAAD,CACEmB,QAAQ,KACR0H,UAAU,KACVsB,MAAM,SACNpL,UAAWJ,EAAQ2D,MAElBA,IAOD1D,GAAYwB,aAAW,SAACC,GAAD,MAAY,CACvCiC,KAAM,CACJ8H,cAAe,kB,UCNbxL,GAAYwB,aAAW,SAACC,GAAD,MAAY,CACvCgK,SAAU,CACRnC,WAAY,MACZzC,UAAWpF,EAAMI,QAAQ,QAId6J,GAnBE,SAAC,GAAkB,IAAhBD,EAAe,EAAfA,SACZ1L,EAAUC,KAChB,OACE,oCACE,kBAACoB,EAAA,EAAD,CAAYmB,QAAQ,KAAKpC,UAAWJ,EAAQ0L,UACzCA,GAEH,kBAACE,GAAA,EAAD,QCTOC,GAAyB,CACpCC,GAAI,IACJC,OAAQ,IACRC,QAAS,IACT,iBAAkB,IAClB,kBAAmB,IACnBC,MAAO,KCRF,SAASC,GAA4BC,EAAWC,GACrD,OAAoB,IAAZD,EAAmBC,ECK7B,IAsBMnM,GAAYwB,aAAW,SAACC,GAAD,MAAY,CACvC2K,cAAe,CACbnE,gBAAiB,UACjBzE,OAAQ,GACRxB,MAAO,OACPqK,aAAc,GAEhBC,mBAAoB,CAClBrE,gBAAiB,UACjBzE,OAAQ,OACR+I,QAAS,UACT9L,MAAO,UACP+L,UAAW,aACXH,aAAc,OAIHI,GAvCO,SAAC,GAA6B,IAA3BP,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,SAI5BpM,EAAUC,KAChB,OACE,yBAAKG,UAAWJ,EAAQqM,eACtB,yBACEjM,UAAWJ,EAAQuM,mBACnBI,MAAO,CACL1K,MAAM,GAAD,OAAKiK,GACRC,EACAN,GAAuBO,IAFpB,OAMND,KCgFHlM,GAAYwB,aAAW,SAACC,GAAD,YAAY,CACvC8C,UAAW,CACToI,aAAclL,EAAMI,QAAQ,IAE9B2E,MAAO,CACL8C,WAAY,KAEdsD,gBAAc,GACZnM,MAAO,UACP6I,WAAY,OAFA,cAGX7H,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BhF,MAAO,MAJG,sBAML,KANK,OAUD6K,GA1GK,SAACxE,GACnB,IAAMtD,EAAWiB,cACX8E,EAAY7G,aAAY,SAACC,GAAD,OAAWA,EAAM6G,MAAMD,aAC/CE,EAAU/G,aAAY,SAACC,GAAD,OAAWA,EAAM6G,MAAMC,WAC7CtF,EAAUzB,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAAS2I,iBAChD/M,EAAUC,KACV+M,EAAc1E,EAAM2E,MAAMC,OAAOvJ,KAOvC,OALAuH,qBAAU,WACR,IAAMtH,EAAG,4CAAwCoJ,GACjDhI,ErB8CG,SAA0BpB,GAC/B,8CAAO,WAAgBoB,GAAhB,eAAAC,EAAA,6DACLD,EChEK,CACLV,KCR8B,uBFsEzB,kBAGoBY,IAAMC,IAAIvB,GAH9B,OAGGwB,EAHH,OAIHJ,EC7DG,CACLV,KCb+B,wBF0E7BU,EAAS,CACPV,KIzEoC,+BJ0EpCe,QAASD,EAASG,OAPjB,gDAUHP,EC7DG,CACLV,KClB8B,uBFoEzB,yDAAP,sDqB/CW6I,CAAiBvJ,MACzB,CAACoJ,IAGF,kBAACjM,EAAA,EAAD,CAAWiB,SAAS,KAAK5B,UAAWJ,EAAQwE,WACzCyG,EAAU,+DAAgC,KAC1CF,EACC,kBAAC9J,EAAA,EAAD,CAAKsG,GAAI,GACP,kBAAC,EAAD,CAAgBrE,OAAQ,MAG1B,oCACE,kBAACjC,EAAA,EAAD,CAAKsG,GAAI,EAAGC,GAAI,EAAGtG,QAAQ,OAAOgI,eAAe,UAC/C,kBAAC,GAAD,CACEJ,UAAWnD,EAAQW,GACnB3C,KAAMgC,EAAQhC,KACdgF,KAAM,OAGV,kBAAC,GAAD,CAAahF,KAAMgC,EAAQhC,OAC3B,kBAAC1C,EAAA,EAAD,CAAKsG,GAAI,EAAGC,GAAI,GACd,kBAAC,GAAD,CAAUkE,SAAS,UACnB,kBAAC,GAAD,CAAc/F,QAASA,EAASc,MAAM,WACtC,kBAAC,GAAD,CAAcd,QAASA,EAASc,MAAM,WACtC,kBAAC,GAAD,CAAcd,QAASA,EAASc,MAAM,oBACtC,kBAAC,GAAD,CAAUiF,SAAS,eAClB/F,EAAQyH,MACLzH,EAAQyH,MAAM3I,KAAI,SAAC4I,GAAD,OAChB,kBAACpM,EAAA,EAAD,CACEsC,IAAK8J,EAAKA,KAAK1J,KACfzC,QAAQ,OACRC,WAAW,SACXoG,GAAI,GAEJ,kBAAClG,EAAA,EAAD,CAAYjB,UAAWJ,EAAQ6M,gBAC5BQ,EAAKA,KAAK1J,MAEb,kBAAC,GAAD,CACEyI,SAAUiB,EAAKA,KAAK1J,KACpBwI,UAAWkB,EAAKC,gBAItB,KAEJ,kBAAC,GAAD,CAAU5B,SAAS,UACnB,kBAACzK,EAAA,EAAD,CAAKsG,GAAI,EAAGC,GAAI,EAAGtG,QAAQ,QACxByE,EAAQ4H,MACL5H,EAAQ4H,MAAM9I,KAAI,SAACH,GAAD,OAChB,kBAACrD,EAAA,EAAD,CAAKO,GAAI,EAAG+B,IAAKe,EAAKA,KAAKX,MACzB,kBAACtC,EAAA,EAAD,CACEkC,IAAKe,EAAKA,KAAKX,KACfvD,UAAWJ,EAAQyG,OAElBnC,EAAKA,KAAKX,UAIjB,MAEN,kBAAC,GAAD,CAAU+H,SAAS,cACnB,kBAACzK,EAAA,EAAD,CAAKsG,GAAI,EAAGC,GAAI,EAAGtG,QAAQ,QACxByE,EAAQ6H,UACL7H,EAAQ6H,UAAU/I,KAAI,SAACH,GAAD,OACpB,kBAACrD,EAAA,EAAD,CAAKO,GAAI,EAAG+B,IAAKe,EAAKmJ,QAAQ9J,MAC5B,kBAACtC,EAAA,EAAD,CAAYjB,UAAWJ,EAAQyG,OAC5BnC,EAAKmJ,QAAQ9J,UAIpB,UCZH+J,GA7EE,WACf,IAAM1N,EAAUC,KAChB,OACE,kBAACc,EAAA,EAAD,CAAWiB,SAAS,MAClB,kBAACf,EAAA,EAAD,CAAKsG,GAAI,EAAGnH,UAAWJ,EAAQ2N,KAC7B,kBAACtM,EAAA,EAAD,CAAYmB,QAAQ,KAAKoL,cAAY,GAArC,2BAGA,4BACG,CAAC,QAAS,QAAS,cAAe,cAAe,SAASnJ,KACzD,SAACC,GAAD,OACE,wBAAInB,IAAKmB,GACP,kBAACrD,EAAA,EAAD,KAAaqD,OAInB,4BACE,kBAACrD,EAAA,EAAD,KACE,uBACEwM,KAAK,sBACLjH,OAAO,SACPkH,IAAI,sBACJ1N,UAAWJ,EAAQ+N,MAJrB,cAWN,kBAAC1M,EAAA,EAAD,CAAYmB,QAAQ,KAAKoL,cAAY,GAArC,4BAEE,4BACE,4BACE,kBAACvM,EAAA,EAAD,iGAKF,4BACE,kBAACA,EAAA,EAAD,yDAEF,4BACE,kBAACA,EAAA,EAAD,+LAMF,4BACE,kBAACA,EAAA,EAAD,sJAKF,4BACE,kBAACA,EAAA,EAAD,iHAKF,4BACE,kBAACA,EAAA,EAAD,8DAIF,4BACE,kBAACA,EAAA,EAAD,yFAaRpB,GAAYwB,aAAW,SAACC,GAAD,MAAY,CACvCqM,KAAM,CACJrN,MAAO,WAETiN,IAAI,eACDjM,EAAMsF,YAAYC,GAAG,MAAQ,CAC5BH,UAAW,S,oBCbX7G,GAAYwB,aAAW,SAACC,GAAD,MAAY,CACvCsM,MAAO,CACL9F,gBAAiB,UACjBjG,MAAO,OACPuK,QAAS,cACTF,aAAc,MACdzK,YAAa,QAIFoM,GA1EI,WACjB,IAAMjJ,EAAWiB,cACXiI,EAAgBhK,aAAY,SAACC,GAAD,OAAWA,EAAMC,SAAS8J,iBAFrC,EAGWxG,mBAAS,IAHpB,mBAGhByG,EAHgB,KAGLC,EAHK,OAIS1G,oBAAS,GAJlB,mBAIhB2G,EAJgB,KAINC,EAJM,KAKjBtO,EAAUC,KAEhBiL,qBAAU,WACRlG,EvB6GK,CACLV,KI3HiC,4BmBchC,IAeH,OACE,kBAACvD,EAAA,EAAD,KACE,kBAACE,EAAA,EAAD,CAAKsG,GAAI,EAAGC,GAAI,GACd,0BAAM+G,SAhBW,SAACC,GACtBF,GAAY,GACZE,EAAEC,iBACEN,EAAUvI,OAAS,GACrBZ,EvB+FG,CACLV,KIrH2B,kBJsH3Be,QuBjGyB8I,KAYW/N,UAAWJ,EAAQ0O,MACjD,kBAACzN,EAAA,EAAD,CAAKC,QAAQ,QACX,kBAACyN,GAAA,EAAD,CACEC,WAAW,EACXxO,UAAWJ,EAAQgO,MACnBa,YAAY,gCACZC,WAAY,CAAE,aAAc,kCAC5BrI,MAAO0H,EACPzH,SAhBW,SAAC8H,GACtBF,GAAY,GACZF,EAAaI,EAAE5H,OAAOH,UAiBd,kBAAC5B,EAAA,EAAD,CAAQnE,MAAM,UAAU4D,KAAK,SAAS9B,QAAQ,aAA9C,WAID6L,GAAYF,EAAUvI,OAAS,EAC9B,kBAAC3E,EAAA,EAAD,CAAKsG,GAAI,GACP,kBAACwH,GAAA,EAAD,CAAOC,SAAS,SAAhB,+BAEA,OAGPd,EAActI,OAAS,EACtB,kBAAC,GAAD,CAAawE,qBAAsB8D,IAEnC,oCACGG,GAAYF,EAAUvI,OAAS,GAC9B,kBAAC3E,EAAA,EAAD,CAAKsG,GAAI,GACP,kBAACwH,GAAA,EAAD,CAAOC,SAAS,SAAhB,0BCxDCC,GARC,WACd,OACE,kBAAClO,EAAA,EAAD,KACE,qDC+BSmO,OA3Bf,WAAgB,IAAD,EACuBxH,oBAAS,GADhC,mBACNpF,EADM,KACM6M,EADN,KAGPpP,EAAqB,WACzBoP,GAAe7M,IAGjB,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAQvC,mBAAoBA,IAC5B,kBAAC,EAAD,CACEuC,WAAYA,EACZvC,mBAAoBA,IAEtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOqP,OAAK,EAACC,KAAK,IAAInF,UAAWY,KACjC,kBAAC,IAAD,CAAOuE,KAAK,iBAAiBnF,UAAW4C,KACxC,kBAAC,IAAD,CAAOuC,KAAK,QAAQnF,UAAWwD,KAC/B,kBAAC,IAAD,CAAO2B,KAAK,UAAUnF,UAAWoF,KACjC,kBAAC,IAAD,CAAOD,KAAK,IAAInF,UAAW+E,S,4BCjBxBM,GAAe,CAC1BC,YAAa,GACbC,YAAa,GACbrF,qBAAsB,GACtB8D,cAAe,GACfnB,cAAe,GACfvC,kBAAmB,CACjB3E,YAAa,EACb6J,cAAe,EACfnF,WAAY,GAEdlG,YAAa,CACXC,KAAM,MACN0B,KpB1BiB,QoB2BjBpC,IAAK,GACLD,KAAM,GACNwD,UAAW,KAuFTwI,GAAU,SAAC3J,GAAD,OAAU,SAACf,EAAG2K,GAC5B,IAAMC,EAAI5K,EAAEtB,KAAOsB,EAAEtB,KAAKmM,cAAgB7K,EAAEU,QAAQhC,KAAKmM,cACnDC,EAAIH,EAAEjM,KAAOiM,EAAEjM,KAAKmM,cAAgBF,EAAEjK,QAAQhC,KAAKmM,cAErDE,EAAa,EAMjB,OALIH,EAAIE,EACNC,EAAa,EACJH,EAAIE,IACbC,GAAc,GpB3HC,QoB6HVhK,EAAegK,GAA2B,EAAdA,IAGtBC,GAhGS,WAAmC,IAAlC9L,EAAiC,uDAAzBoL,GAAcW,EAAW,uCACxD,OAAQA,EAAO5L,MACb,ItBnCkC,yBsBoChC,OAAO,gBACFH,EADL,CAEEqL,YAAY,aAAKU,EAAO7K,QAAQC,SAChCmK,YAAaS,EAAO7K,QAAQC,QAC5BkF,kBAAkB,gBACbrG,EAAMqG,kBADM,CAEfkF,cAAeQ,EAAO7K,QAAQG,QAEhCnB,YAAY,gBAAMF,EAAME,YAAb,CAA0BC,KAAM,MAAO0B,KpB5CrC,YoB8CjB,ItB7CuC,8BsB8CrC,OAAO,gBACF7B,EADL,CAEEsL,YAAaS,EAAO7K,QAAQM,QAC5B6E,kBAAkB,gBACbrG,EAAMqG,kBADM,CAEfkF,cAAeQ,EAAO7K,QAAQG,QAEhCnB,YAAY,gBACPF,EAAME,YADA,CAETC,KAAM4L,EAAO7K,QAAQ1B,KACrBqC,KpBzDW,QoB0DXpC,IAAKsM,EAAO7K,QAAQzB,IACpBD,KAAMuM,EAAO7K,QAAQ1B,SAG3B,ItB5D+B,sBsB6D7B,IAAMwM,GAAUD,EAAO7K,QAAU,GAAKlB,EAAME,YAAY8C,UAClDoD,EAAa6F,KAAKC,KACtBlM,EAAMqG,kBAAkBkF,cAAgBvL,EAAME,YAAY8C,WAE5D,OAAO,gBACFhD,EADL,CAEEiG,qBAAsBjG,EAAMsL,YAAYa,MACtCH,EACAA,EAAShM,EAAME,YAAY8C,WAE7BqD,kBAAkB,gBACbrG,EAAMqG,kBADM,CAEf3E,YAAaqK,EAAO7K,QACpBkF,iBAGN,ItB5EwC,+BsB6EtC,OAAO,gBACFpG,EADL,CAEE4I,cAAemD,EAAO7K,UAE1B,ItBhFgB,OsBiFd,OAAO,gBACFlB,EADL,CAEEsL,YAAatL,EAAMsL,YAAYzJ,KAAK2J,GAAQO,EAAO7K,UACnDhB,YAAY,gBAAMF,EAAME,YAAb,CAA0B2B,KAAMkK,EAAO7K,YAEtD,ItBrF0B,iBsBsFxB,OAAO,gBACFlB,EADL,CAEEE,YAAY,gBAAMF,EAAME,YAAb,CAA0B8C,UAAW+I,EAAO7K,YAE3D,ItBzF2B,kBsB0FzB,OAAO,gBACFlB,EADL,CAEE+J,cAAe/J,EAAMqL,YAAYe,QAC/B,SAAC5K,GAAD,OACEA,EAAQhC,KACL6M,OACAV,cACAW,QAAQP,EAAO7K,QAAQyK,gBAAkB,OAGpD,ItBnGiC,wBsBoG/B,OAAO,gBACF3L,EADL,CAEE+J,cAAe,KAEnB,QACE,OAAO/J,IC1GAoL,GAAe,CAC1BxE,WAAW,EACXE,SAAS,GA6BIyF,GA1BM,WAAmC,IAAlCvM,EAAiC,uDAAzBoL,GAAcW,EAAW,uCACrD,OAAQA,EAAO5L,MACb,IzBb8B,qByBc5B,OAAO,gBACFH,EADL,CAEE4G,WAAW,EACXE,SAAS,IAGb,IzBlB8B,qByBmB5B,OAAO,gBACF9G,EADL,CAEE4G,WAAW,EACXE,SAAS,IAEb,IzBzB+B,sByB0B7B,OAAO,gBACF9G,EADL,CAEE4G,WAAW,EACXE,SAAS,IAEb,QACE,OAAO9G,IC7BEwM,8BAAgB,CAC7BvM,SAAU6L,GACVjF,MAAO0F,K,oBCMWE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9D,MACvB,2DCLC,IAAM+D,GAAQC,uBACnBC,GACAC,+BAAoBC,2BAAgBC,QAGtCC,IAASC,OACP,kBAAC,IAAD,CAAUP,MAAOA,IACf,kBAAC,GAAD,OAEFQ,SAASC,eAAe,SD6GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.bda24240.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Container,\r\n  Box,\r\n  Button,\r\n  Hidden,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst Navbar = ({ handleDrawerToggle }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <AppBar position=\"fixed\" className={classes.appBar}>\r\n        <Toolbar>\r\n          <Hidden lgUp>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open mobile menu\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n              className={classes.menuButton}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n          </Hidden>\r\n          <Container disableGutters>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Link to=\"/\">\r\n                <Typography>Pokedex App</Typography>\r\n              </Link>\r\n\r\n              <Box flexGrow={1}></Box>\r\n\r\n              <Hidden mdDown>\r\n                <Box mr={3}>\r\n                  <Link to=\"/search\">\r\n                    <Typography>Wyszukiwarka</Typography>\r\n                  </Link>\r\n                </Box>\r\n                <Link to=\"/info\">\r\n                  <Typography>Informacje</Typography>\r\n                </Link>\r\n              </Hidden>\r\n            </Box>\r\n          </Container>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Toolbar />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Drawer,\r\n  Toolbar,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n} from \"@material-ui/core\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst MobileMenuDrawer = ({ mobileOpen, handleDrawerToggle }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Drawer\r\n      variant=\"temporary\"\r\n      open={mobileOpen}\r\n      onClose={handleDrawerToggle}\r\n      classes={{\r\n        paper: classes.drawerPaper,\r\n      }}\r\n    >\r\n      <Toolbar />\r\n      <IconButton\r\n        color=\"inherit\"\r\n        aria-label=\"close mobile menu\"\r\n        edge=\"start\"\r\n        onClick={handleDrawerToggle}\r\n        className={classes.closeButton}\r\n      >\r\n        <CloseIcon />\r\n      </IconButton>\r\n      <List>\r\n        <Link to=\"/\" onClick={handleDrawerToggle}>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Strona główna\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/search\" onClick={handleDrawerToggle}>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Wyszukiwarka\" />\r\n          </ListItem>\r\n        </Link>\r\n        <Link to=\"/info\" onClick={handleDrawerToggle}>\r\n          <ListItem button>\r\n            <ListItemText primary=\"Informacje\" />\r\n          </ListItem>\r\n        </Link>\r\n      </List>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawerPaper: {\r\n    maxWidth: 300,\r\n    width: \"100%\",\r\n  },\r\n  closeButton: {\r\n    position: \"fixed\",\r\n    top: 5,\r\n    left: 12,\r\n  },\r\n}));\r\n\r\nexport default MobileMenuDrawer;\r\n","import React from \"react\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\nconst SkeletonLoader = ({ number }) => {\r\n  const skeletonArr = [];\r\n\r\n  for (let i = 0; i < number; i++) {\r\n    skeletonArr.push(\r\n      <Skeleton key={i} animation=\"wave\" variant=\"text\" height={40} />\r\n    );\r\n  }\r\n\r\n  return <>{skeletonArr}</>;\r\n};\r\n\r\nexport default SkeletonLoader;\r\n","const pokemonTypes = [\r\n  {\r\n    name: \"all\",\r\n  },\r\n  {\r\n    name: \"normal\",\r\n    url: \"https://pokeapi.co/api/v2/type/1/\",\r\n  },\r\n  {\r\n    name: \"fighting\",\r\n    url: \"https://pokeapi.co/api/v2/type/2/\",\r\n  },\r\n  {\r\n    name: \"flying\",\r\n    url: \"https://pokeapi.co/api/v2/type/3/\",\r\n  },\r\n  {\r\n    name: \"poison\",\r\n    url: \"https://pokeapi.co/api/v2/type/4/\",\r\n  },\r\n  {\r\n    name: \"ground\",\r\n    url: \"https://pokeapi.co/api/v2/type/5/\",\r\n  },\r\n  {\r\n    name: \"rock\",\r\n    url: \"https://pokeapi.co/api/v2/type/6/\",\r\n  },\r\n  {\r\n    name: \"bug\",\r\n    url: \"https://pokeapi.co/api/v2/type/7/\",\r\n  },\r\n  {\r\n    name: \"ghost\",\r\n    url: \"https://pokeapi.co/api/v2/type/8/\",\r\n  },\r\n  {\r\n    name: \"steel\",\r\n    url: \"https://pokeapi.co/api/v2/type/9/\",\r\n  },\r\n  {\r\n    name: \"fire\",\r\n    url: \"https://pokeapi.co/api/v2/type/10/\",\r\n  },\r\n  {\r\n    name: \"water\",\r\n    url: \"https://pokeapi.co/api/v2/type/11/\",\r\n  },\r\n  {\r\n    name: \"grass\",\r\n    url: \"https://pokeapi.co/api/v2/type/12/\",\r\n  },\r\n  {\r\n    name: \"electric\",\r\n    url: \"https://pokeapi.co/api/v2/type/13/\",\r\n  },\r\n  {\r\n    name: \"psychic\",\r\n    url: \"https://pokeapi.co/api/v2/type/14/\",\r\n  },\r\n  {\r\n    name: \"ice\",\r\n    url: \"https://pokeapi.co/api/v2/type/15/\",\r\n  },\r\n  {\r\n    name: \"dragon\",\r\n    url: \"https://pokeapi.co/api/v2/type/16/\",\r\n  },\r\n  {\r\n    name: \"dark\",\r\n    url: \"https://pokeapi.co/api/v2/type/17/\",\r\n  },\r\n  {\r\n    name: \"fairy\",\r\n    url: \"https://pokeapi.co/api/v2/type/18/\",\r\n  },\r\n];\r\n\r\nexport default pokemonTypes;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Grid, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport pokemonTypes from \"./../../utils/data/pokemonTypes\";\r\n\r\nconst PokemonTypesBtn = ({ onClickFn }) => {\r\n  const btnType = useSelector((state) => state.pokemons.formOptions.type);\r\n  const classes = useStyles();\r\n  return (\r\n    <Grid container spacing={2}>\r\n      {pokemonTypes.map((btn) => (\r\n        <Grid key={btn.name} item xs={4} lg={6}>\r\n          <Button\r\n            variant=\"outlined\"\r\n            className={classes.btn}\r\n            disabled={btnType === btn.name ? true : false}\r\n            onClick={() => onClickFn(btn.name, btn.url)}\r\n          >\r\n            {btn.name}\r\n          </Button>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  btn: {\r\n    borderColor: \"#006c74\",\r\n  },\r\n}));\r\n\r\nexport default PokemonTypesBtn;\r\n","import axios from \"axios\";\r\n\r\nimport {\r\n  POKEMONS_FETCH_SUCCESS,\r\n  POKEMONS_TYPE_FETCH_SUCCESS,\r\n  SET_DATA_FOR_RENDER,\r\n  SINGLE_POKEMON_FETCH_SUCCESS,\r\n  SORT,\r\n  SET_PAGE_LIMIT,\r\n  SEARCH_POKEMONS,\r\n  CLEAR_SEARCH_POKEMONS,\r\n} from \"./../../utils/constants/pokemonsReducerConstants\";\r\n\r\nimport {\r\n  asyncActionStart,\r\n  asyncActionFinish,\r\n  asyncActionError,\r\n} from \"./asyncActions\";\r\n\r\nimport { BASIC } from \"./../../utils/constants/sortTypeConstants\";\r\n\r\nimport { ALL_POKEMONS_URL } from \"./../../utils/constants/urlConstants\";\r\n\r\n// API nie oferuje możliwości sortowania pokemonów np.alfabetycznie dlatego pobieram wszystkie pokemony\r\n// i dzięki temu mogę je posortować właśnie np.alfabetczynie w przypadku gdy API zwracałoby ogromną ilość\r\n// danych nie byłby to najlepszy pomysł\r\n\r\nexport function getPokemonsInit() {\r\n  return async function (dispatch) {\r\n    dispatch(asyncActionStart());\r\n    try {\r\n      const response = await axios.get(ALL_POKEMONS_URL);\r\n      dispatch(asyncActionFinish());\r\n      dispatch({\r\n        type: POKEMONS_FETCH_SUCCESS,\r\n        payload: {\r\n          results: response.data.results,\r\n          count: response.data.count,\r\n        },\r\n      });\r\n      dispatch(setPagination(1));\r\n    } catch (error) {\r\n      dispatch(asyncActionError());\r\n    }\r\n  };\r\n}\r\n\r\nexport function getPokemonsType(url, name) {\r\n  return async function (dispatch) {\r\n    dispatch(asyncActionStart());\r\n    try {\r\n      const response = await axios.get(url);\r\n      dispatch(asyncActionFinish());\r\n      dispatch({\r\n        type: POKEMONS_TYPE_FETCH_SUCCESS,\r\n        payload: {\r\n          pokemon: response.data.pokemon,\r\n          count: response.data.pokemon.length,\r\n          name: name,\r\n          url: url,\r\n        },\r\n      });\r\n      dispatch(setPagination(1));\r\n    } catch (error) {\r\n      dispatch(asyncActionError());\r\n    }\r\n  };\r\n}\r\n\r\nexport function getSinglePokemon(url) {\r\n  return async function (dispatch) {\r\n    dispatch(asyncActionStart());\r\n    try {\r\n      const response = await axios.get(url);\r\n      dispatch(asyncActionFinish());\r\n      dispatch({\r\n        type: SINGLE_POKEMON_FETCH_SUCCESS,\r\n        payload: response.data,\r\n      });\r\n    } catch (error) {\r\n      dispatch(asyncActionError());\r\n    }\r\n  };\r\n}\r\n\r\nexport function setPagination(currentPage) {\r\n  return {\r\n    type: SET_DATA_FOR_RENDER,\r\n    payload: currentPage,\r\n  };\r\n}\r\n\r\nexport function sort(sortType, pokemonsType, url, name) {\r\n  if (sortType === BASIC) {\r\n    if (pokemonsType === \"all\") {\r\n      return (dispatch) => {\r\n        dispatch(getPokemonsInit());\r\n      };\r\n    } else {\r\n      return (dispatch) => {\r\n        dispatch(getPokemonsType(url, name));\r\n      };\r\n    }\r\n  }\r\n\r\n  return (dispatch) => {\r\n    dispatch({ type: SORT, payload: sortType });\r\n    dispatch(setPagination(1));\r\n  };\r\n}\r\n\r\nexport function setPageLimit(pageLimit) {\r\n  return function (dispatch) {\r\n    dispatch({\r\n      type: SET_PAGE_LIMIT,\r\n      payload: pageLimit,\r\n    });\r\n    dispatch(setPagination(1));\r\n  };\r\n}\r\n\r\nexport function searchPokemon(txt) {\r\n  return {\r\n    type: SEARCH_POKEMONS,\r\n    payload: txt,\r\n  };\r\n}\r\n\r\nexport function clearSearchPokemons() {\r\n  return {\r\n    type: CLEAR_SEARCH_POKEMONS,\r\n  };\r\n}\r\n\r\n// export function savePokemon(name, url) {\r\n//   return {\r\n//     type: \"SAVE_POKEMON\",\r\n//     payload: { name, url },\r\n//   };\r\n// }\r\n\r\n// export function deleteSavedPokemon(name) {\r\n//   return {\r\n//     type: \"REMOVE_SAVED_POKEMON\",\r\n//     payload: name,\r\n//   };\r\n// }\r\n","import {\r\n  ASYNC_ACTION_START,\r\n  ASYNC_ACTION_FINISH,\r\n  ASYNC_ACTION_ERROR,\r\n} from \"./../../utils/constants/asyncReducerConstants\";\r\n\r\nexport const asyncActionStart = () => {\r\n  return {\r\n    type: ASYNC_ACTION_START,\r\n  };\r\n};\r\n\r\nexport const asyncActionFinish = () => {\r\n  return {\r\n    type: ASYNC_ACTION_FINISH,\r\n  };\r\n};\r\n\r\nexport const asyncActionError = () => {\r\n  return {\r\n    type: ASYNC_ACTION_ERROR,\r\n  };\r\n};\r\n","export const ASYNC_ACTION_START = \"ASYNC_ACTION_START\";\r\nexport const ASYNC_ACTION_FINISH = \"ASYNC_ACTION_FINISH\";\r\nexport const ASYNC_ACTION_ERROR = \"ASYNC_ACTION_ERROR\";\r\n","export const ALL_POKEMONS_URL = \"https://pokeapi.co/api/v2/pokemon/?limit=964\";\r\n","export const POKEMONS_FETCH_SUCCESS = \"POKEMONS_FETCH_SUCCESS\";\r\nexport const POKEMONS_TYPE_FETCH_SUCCESS = \"POKEMONS_TYPE_FETCH_SUCCESS\";\r\nexport const SET_DATA_FOR_RENDER = \"SET_DATA_FOR_RENDER\";\r\nexport const SINGLE_POKEMON_FETCH_SUCCESS = \"SINGLE_POKEMON_FETCH_SUCCESS\";\r\nexport const SORT = \"SORT\";\r\nexport const SET_PAGE_LIMIT = \"SET_PAGE_LIMIT\";\r\nexport const SEARCH_POKEMONS = \"SEARCH_POKEMONS\";\r\nexport const CLEAR_SEARCH_POKEMONS = \"CLEAR_SEARCH_POKEMONS\";\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { sort } from \"./../../redux/actions/pokemonsActions\";\r\nimport { BASIC, A_Z, Z_A } from \"./../../utils/constants/sortTypeConstants\";\r\n\r\nconst SortSelect = () => {\r\n  const sortType = useSelector((state) => state.pokemons.formOptions.sort);\r\n  const dispatch = useDispatch();\r\n  const pokemonsType = useSelector((state) => state.pokemons.formOptions.type);\r\n  const url = useSelector((state) => state.pokemons.formOptions.url);\r\n  const name = useSelector((state) => state.pokemons.formOptions.name);\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    dispatch(sort(event.target.value, pokemonsType, url, name));\r\n  };\r\n\r\n  return (\r\n    <FormControl variant=\"filled\" className={classes.formControl}>\r\n      <InputLabel id=\"sort-label\">Sortuj</InputLabel>\r\n      <Select\r\n        labelId=\"sort-label\"\r\n        id=\"sort-label-select\"\r\n        value={sortType}\r\n        onChange={handleChange}\r\n      >\r\n        <MenuItem value={BASIC}>Domyślnie</MenuItem>\r\n        <MenuItem value={A_Z}>nazwa a-z</MenuItem>\r\n        <MenuItem value={Z_A}>nazwa z-a</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SortSelect;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    marginRight: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 128,\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      minWidth: 228,\r\n    },\r\n  },\r\n}));\r\n","export const BASIC = \"basic\";\r\nexport const A_Z = \"a-z\";\r\nexport const Z_A = \"z-a\";\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { setPageLimit } from \"./../../redux/actions/pokemonsActions\";\r\n\r\nconst ShowPageSelect = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const pageLimit = useSelector(\r\n    (state) => state.pokemons.formOptions.pageLimit\r\n  );\r\n  const classes = useStyles();\r\n  const handleChange = (event) => {\r\n    dispatch(setPageLimit(event.target.value));\r\n  };\r\n\r\n  return (\r\n    <FormControl variant=\"filled\" className={classes.formControl}>\r\n      <InputLabel id=\"sort-label\">pokazuj na stronie</InputLabel>\r\n      <Select\r\n        labelId=\"sort-label\"\r\n        id=\"sort-label-select\"\r\n        value={pageLimit}\r\n        onChange={handleChange}\r\n      >\r\n        <MenuItem value={10}>10</MenuItem>\r\n        <MenuItem value={20}>20</MenuItem>\r\n        <MenuItem value={30}>30</MenuItem>\r\n        <MenuItem value={40}>40</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default ShowPageSelect;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    marginRight: theme.spacing(1),\r\n    marginTop: theme.spacing(2),\r\n    minWidth: 134,\r\n    [theme.breakpoints.up(\"lg\")]: {\r\n      minWidth: 228,\r\n    },\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { Toolbar, Drawer, Box, Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport PokemonTypesBtn from \"./PokemonTypesBtn\";\r\nimport SortSelect from \"./SortSelect\";\r\nimport ShowPageSelect from \"./ShowPageSelect\";\r\nimport {\r\n  getPokemonsType,\r\n  getPokemonsInit,\r\n} from \"./../../redux/actions/pokemonsActions\";\r\n\r\nconst DesktopFilterSection = () => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const handlePokemonsType = (name, url) => {\r\n    name === \"all\"\r\n      ? dispatch(getPokemonsInit())\r\n      : dispatch(getPokemonsType(url, name));\r\n  };\r\n\r\n  return (\r\n    <nav className={classes.drawer} aria-label=\"pokemon section filter\">\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        <Toolbar />\r\n        <Container>\r\n          <Box mt={6}>\r\n            <Box mb={6}>\r\n              <ShowPageSelect />\r\n              <SortSelect />\r\n            </Box>\r\n            <PokemonTypesBtn onClickFn={handlePokemonsType} />\r\n          </Box>\r\n        </Container>\r\n      </Drawer>\r\n    </nav>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  drawer: {\r\n    width: 300,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaper: {\r\n    width: 300,\r\n  },\r\n}));\r\n\r\nexport default DesktopFilterSection;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Dialog,\r\n  Button,\r\n  AppBar,\r\n  Toolbar,\r\n  IconButton,\r\n  Typography,\r\n  Slide,\r\n  Container,\r\n  Box,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  getPokemonsType,\r\n  getPokemonsInit,\r\n} from \"./../../redux/actions/pokemonsActions\";\r\nimport PokemonTypesBtn from \"./PokemonTypesBtn\";\r\n\r\nconst MobileFilterModal = () => {\r\n  const classes = useStyles();\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const handleClickOpen = () => {\r\n    setIsOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setIsOpen(false);\r\n  };\r\n\r\n  const handlePokemonsType = (name, url) => {\r\n    setIsOpen(false);\r\n    name === \"all\"\r\n      ? dispatch(getPokemonsInit())\r\n      : dispatch(getPokemonsType(url, name));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button variant=\"contained\" onClick={handleClickOpen}>\r\n        Pokaż filtry\r\n      </Button>\r\n      <Dialog\r\n        fullScreen\r\n        open={isOpen}\r\n        TransitionComponent={Transition}\r\n        onClose={handleClose}\r\n      >\r\n        <AppBar position=\"fixed\" className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open mobile filter modal\"\r\n              edge=\"start\"\r\n              onClick={handleClose}\r\n            >\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography>Wybierz typ pokemona</Typography>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <Toolbar />\r\n        <Container>\r\n          <Box mt={2}>\r\n            <PokemonTypesBtn onClickFn={handlePokemonsType} />\r\n          </Box>\r\n        </Container>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default MobileFilterModal;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    backgroundColor: \"#006c74\",\r\n  },\r\n  btn: {\r\n    borderColor: \"#006c74\",\r\n  },\r\n  dialog: {\r\n    width: 300,\r\n  },\r\n}));\r\n\r\nconst Transition = React.forwardRef(function Transition(props, ref) {\r\n  return <Slide direction=\"up\" ref={ref} {...props} />;\r\n});\r\n","import React from \"react\";\r\nimport Img from \"react-image\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BlockIcon from \"@material-ui/icons/Block\";\r\n\r\nconst PokemonAvatar = ({ pokemonID, name, size }) => {\r\n  const classes = useStyles({ size: size });\r\n\r\n  /*\r\n\r\n    Grafiki z pokeAPi są bardzo słabej jakości, dlatego zdjęcia pobieram stąd https://github.com/codenights/ultimate-pokedex/tree/master/app/public/artwork\r\n    z uwagi jednak na fakt iż autor może zmienić strukture folderów stowrzyłem osobne rezpozytrium z tymi zdjeciami i z niego pobierane\r\n    sa grafiki dodatkowo zoptymalizowałem je. Zarówno zdjęcia z pokeApi jak i powyższego zródła nie zawierają wszystkich pokemonow\r\n \r\n    //const url = `https://raw.githubusercontent.com/codenights/ultimate-pokedex/master/app/public/artwork/${pokemonID}.png`;\r\n\r\n    */\r\n\r\n  const url = `https://raw.githubusercontent.com/zloty60/pokemon_img/master/img/${pokemonID}.png`;\r\n  return (\r\n    <Img\r\n      className={classes.img}\r\n      src={url}\r\n      alt={`${name} image`}\r\n      loader={\r\n        <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\">\r\n          <Skeleton\r\n            animation=\"wave\"\r\n            variant=\"rect\"\r\n            width={size}\r\n            height={size}\r\n          />\r\n        </Box>\r\n      }\r\n      unloader={<BlockIcon className={classes.icon} />}\r\n    />\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles(() => ({\r\n  img: (size) => ({\r\n    width: size.size,\r\n    height: size.size,\r\n    display: \"inline-block\",\r\n  }),\r\n  icon: (size) => ({\r\n    width: size.size,\r\n    height: size.size,\r\n  }),\r\n}));\r\n\r\nexport default PokemonAvatar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  CardActionArea,\r\n  Grid,\r\n} from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport PokemonAvatar from \"./../common/PokemonAvatar\";\r\n\r\nconst PokemonCard = ({ name, url }) => {\r\n  const classes = useStyles();\r\n  // https://pokeapi.co/api/v2/pokemon/1/  wycinamy cyfrę\r\n  const pokemonID = url.substring(34, url.length - 1);\r\n\r\n  return (\r\n    <Grid item xs={6} sm={4} md={3} lg={2}>\r\n      <Card className={classes.card}>\r\n        <CardActionArea>\r\n          <Link\r\n            to={{\r\n              pathname: `/pokemon/${name}`,\r\n              state: {\r\n                pokemonUrl: url,\r\n              },\r\n            }}\r\n          >\r\n            <CardContent>\r\n              <PokemonAvatar size={110} pokemonID={pokemonID} name={name} />\r\n              <Typography\r\n                variant=\"h6\"\r\n                component=\"h3\"\r\n                className={classes.typography}\r\n              >\r\n                {name}\r\n              </Typography>\r\n            </CardContent>\r\n          </Link>\r\n        </CardActionArea>\r\n      </Card>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  card: {\r\n    backgroundColor: \"#F5F5F5\",\r\n    textAlign: \"center\",\r\n    position: \"relative\",\r\n    height: \"100%\", // równe wysokości card\r\n  },\r\n  typography: {\r\n    fontWeight: 400,\r\n    fontSize: \"1.15rem\",\r\n    marginTop: 5,\r\n  },\r\n}));\r\n\r\nexport default PokemonCard;\r\n\r\n//color: \"#FFAB00\",\r\n","import React from \"react\";\r\nimport PokemonCard from \"./PokemonCard\";\r\nimport { Grid } from \"@material-ui/core\";\r\n\r\nconst PokemonList = ({ pokemonListForRender }) => {\r\n  return (\r\n    <Grid container spacing={3}>\r\n      {pokemonListForRender.map((pokemon) => (\r\n        <PokemonCard\r\n          key={\r\n            pokemon.hasOwnProperty(\"pokemon\") // allPokemons zwraca {name:\"bulbasaur\"} a type pokemon pokemon:{name:\"bulbasaur\"}\r\n              ? pokemon.pokemon.name\r\n              : pokemon.name\r\n          }\r\n          name={\r\n            pokemon.hasOwnProperty(\"pokemon\")\r\n              ? pokemon.pokemon.name\r\n              : pokemon.name\r\n          }\r\n          url={\r\n            pokemon.hasOwnProperty(\"pokemon\")\r\n              ? pokemon.pokemon.url\r\n              : pokemon.url\r\n          }\r\n        />\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default PokemonList;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Pagination from \"@material-ui/lab/Pagination\";\r\n\r\nimport { setPagination } from \"./../../redux/actions/pokemonsActions\";\r\n\r\nconst PokemonPagination = () => {\r\n  const dispatch = useDispatch();\r\n  const totalPages = useSelector(\r\n    (state) => state.pokemons.pokemonPagination.totalPages\r\n  );\r\n  const currentPage = useSelector(\r\n    (state) => state.pokemons.pokemonPagination.currentPage\r\n  );\r\n  const handleChange = (event, value) => {\r\n    dispatch(setPagination(value));\r\n  };\r\n  return (\r\n    <>\r\n      <Pagination\r\n        onChange={handleChange}\r\n        count={totalPages}\r\n        boundaryCount={1}\r\n        shape=\"rounded\"\r\n        siblingCount={1}\r\n        page={currentPage}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonPagination;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Hidden, Container, Box, Typography } from \"@material-ui/core\";\r\n\r\nimport SkeletonLoader from \"./../components/common/SkeletonLoader\";\r\nimport DesktopFilterSection from \"./../components/filterSection/DesktopFilterSection\";\r\nimport MobileFilterModal from \"./../components/filterSection/MobileFilterModal\";\r\nimport PokemonList from \"./../components/pokemonList/PokemonList\";\r\nimport SortSelect from \"./../components/filterSection/SortSelect\";\r\nimport ShowPageSelect from \"./../components/filterSection/ShowPageSelect\";\r\nimport PokemonPagination from \"./../components/pokemonList/PokemonPagination\";\r\nimport { getPokemonsInit } from \"../redux/actions/pokemonsActions\";\r\n\r\nconst RootView = () => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector((state) => state.async.isLoading);\r\n  const isError = useSelector((state) => state.async.isError);\r\n  const pokemonListForRender = useSelector(\r\n    (state) => state.pokemons.pokemonListForRender\r\n  );\r\n  const pokemonPagination = useSelector(\r\n    (state) => state.pokemons.pokemonPagination\r\n  );\r\n\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPokemonsInit());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Hidden mdDown>\r\n        <DesktopFilterSection />\r\n      </Hidden>\r\n      <main className={classes.content}>\r\n        <Container>\r\n          {isError ? <p>upp coś poszło nie tak</p> : null}\r\n          <Box display=\"flex\" alignItems=\"center\" mt={3}>\r\n            <Hidden lgUp>\r\n              <MobileFilterModal />\r\n            </Hidden>\r\n            <Box flexGrow=\"1\" />\r\n            <Typography>\r\n              Strona {pokemonPagination.currentPage} /\r\n              {pokemonPagination.totalPages}\r\n            </Typography>\r\n          </Box>\r\n          <Hidden lgUp>\r\n            <ShowPageSelect />\r\n            <SortSelect />\r\n          </Hidden>\r\n          {isLoading ? (\r\n            <SkeletonLoader number={12} />\r\n          ) : (\r\n            <>\r\n              <Box mt={3} mb={3}>\r\n                <PokemonList pokemonListForRender={pokemonListForRender} />\r\n              </Box>\r\n              <Box display=\"flex\" justifyContent=\"center\" mt={6} mb={4}>\r\n                <PokemonPagination />\r\n              </Box>\r\n            </>\r\n          )}\r\n        </Container>\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RootView;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { Box, Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst AboutDetails = ({ pokemon, value }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Box mt={1} display=\"flex\">\r\n      <Typography className={classes.property}>{value}:</Typography>\r\n      <Typography className={classes.value}>{pokemon[value]}</Typography>\r\n    </Box>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  property: {\r\n    fontWeight: \"300\",\r\n    color: \"#797979\",\r\n    width: 160,\r\n  },\r\n  value: {\r\n    fontWeight: 500,\r\n  },\r\n}));\r\n\r\nexport default AboutDetails;\r\n","import React from \"react\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst PokemonName = ({ name }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Typography\r\n      variant=\"h4\"\r\n      component=\"h1\"\r\n      align=\"center\"\r\n      className={classes.name}\r\n    >\r\n      {name}\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default PokemonName;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  name: {\r\n    textTransform: \"capitalize\",\r\n  },\r\n}));\r\n","import React from \"react\";\r\nimport { Typography, Divider } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst Subtitle = ({ subtitle }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <Typography variant=\"h5\" className={classes.subtitle}>\r\n        {subtitle}\r\n      </Typography>\r\n      <Divider />\r\n    </>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  subtitle: {\r\n    fontWeight: \"400\",\r\n    marginTop: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default Subtitle;\r\n","// dane znalezione w internecie\r\n\r\nexport const POKEMON_MAX_BASE_STATS = {\r\n  hp: 255,\r\n  attack: 190,\r\n  defense: 230,\r\n  \"special-attack\": 194,\r\n  \"special-defense\": 230,\r\n  speed: 180,\r\n};\r\n","export function calculateStatsToPercentages(statValue, statName) {\r\n  return (statValue * 100) / statName;\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { POKEMON_MAX_BASE_STATS } from \"./../../utils/constants/pokemonBaseStats\";\r\nimport { calculateStatsToPercentages } from \"./../../utils/helperFunctions\";\r\n\r\nconst StatisticsBar = ({ statValue, statName }) => {\r\n  // api dostarcza mi base_stat , w internecie znalazłem maksymalne wartości dla base_stat\r\n  // i za pomocą funkcji calculateStatsToPercentages obliczam procentową wartośc base_stat\r\n  // w komponecie dostarczaną propsem jakos statValue\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.statisticsBar}>\r\n      <div\r\n        className={classes.statisticsBarValue}\r\n        style={{\r\n          width: `${calculateStatsToPercentages(\r\n            statValue,\r\n            POKEMON_MAX_BASE_STATS[statName]\r\n          )}%`,\r\n        }}\r\n      >\r\n        {statValue}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  statisticsBar: {\r\n    backgroundColor: \"#e6e6e6\",\r\n    height: 27,\r\n    width: \"100%\",\r\n    borderRadius: 4,\r\n  },\r\n  statisticsBarValue: {\r\n    backgroundColor: \"#006c74\",\r\n    height: \"100%\",\r\n    padding: \"2px 4px\",\r\n    color: \"#FFFFFF\",\r\n    boxSizing: \"border-box\",\r\n    borderRadius: 4,\r\n  },\r\n}));\r\n\r\nexport default StatisticsBar;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Box, Typography, Container } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport { getSinglePokemon } from \"./../redux/actions/pokemonsActions\";\r\nimport PokemonAvatar from \"./../components/common/PokemonAvatar\";\r\nimport SkeletonLoader from \"./../components/common/SkeletonLoader\";\r\nimport AboutDetails from \"./../components/singlePokemon/AboutDetails\";\r\nimport PokemonName from \"./../components/singlePokemon/PokemonName\";\r\nimport Subtitle from \"./../components/singlePokemon/Subtitle\";\r\nimport StatisticsBar from \"./../components/singlePokemon/StatisticsBar\";\r\n\r\nconst PokemonView = (props) => {\r\n  const dispatch = useDispatch();\r\n  const isLoading = useSelector((state) => state.async.isLoading);\r\n  const isError = useSelector((state) => state.async.isError);\r\n  const pokemon = useSelector((state) => state.pokemons.singlePokemon);\r\n  const classes = useStyles();\r\n  const pokemonName = props.match.params.name;\r\n\r\n  useEffect(() => {\r\n    const url = `https://pokeapi.co/api/v2/pokemon/${pokemonName}`;\r\n    dispatch(getSinglePokemon(url));\r\n  }, [pokemonName]);\r\n\r\n  return (\r\n    <Container maxWidth=\"sm\" className={classes.container}>\r\n      {isError ? <p>upp coś poszło nie tak</p> : null}\r\n      {isLoading ? (\r\n        <Box mt={6}>\r\n          <SkeletonLoader number={10} />\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          <Box mt={4} mb={3} display=\"flex\" justifyContent=\"center\">\r\n            <PokemonAvatar\r\n              pokemonID={pokemon.id}\r\n              name={pokemon.name}\r\n              size={200}\r\n            />\r\n          </Box>\r\n          <PokemonName name={pokemon.name} />\r\n          <Box mt={3} mb={3}>\r\n            <Subtitle subtitle=\"About\" />\r\n            <AboutDetails pokemon={pokemon} value=\"weight\" />\r\n            <AboutDetails pokemon={pokemon} value=\"height\" />\r\n            <AboutDetails pokemon={pokemon} value=\"base_experience\" />\r\n            <Subtitle subtitle=\"Statistics\" />\r\n            {pokemon.stats\r\n              ? pokemon.stats.map((stat) => (\r\n                  <Box\r\n                    key={stat.stat.name}\r\n                    display=\"flex\"\r\n                    alignItems=\"center\"\r\n                    mt={3}\r\n                  >\r\n                    <Typography className={classes.statisticsName}>\r\n                      {stat.stat.name}\r\n                    </Typography>\r\n                    <StatisticsBar\r\n                      statName={stat.stat.name}\r\n                      statValue={stat.base_stat}\r\n                    />\r\n                  </Box>\r\n                ))\r\n              : null}\r\n\r\n            <Subtitle subtitle=\"Types\" />\r\n            <Box mt={2} mb={2} display=\"flex\">\r\n              {pokemon.types\r\n                ? pokemon.types.map((type) => (\r\n                    <Box mr={5} key={type.type.name}>\r\n                      <Typography\r\n                        key={type.type.name}\r\n                        className={classes.value}\r\n                      >\r\n                        {type.type.name}\r\n                      </Typography>\r\n                    </Box>\r\n                  ))\r\n                : null}\r\n            </Box>\r\n            <Subtitle subtitle=\"Abilities\" />\r\n            <Box mt={2} mb={2} display=\"flex\">\r\n              {pokemon.abilities\r\n                ? pokemon.abilities.map((type) => (\r\n                    <Box mr={5} key={type.ability.name}>\r\n                      <Typography className={classes.value}>\r\n                        {type.ability.name}\r\n                      </Typography>\r\n                    </Box>\r\n                  ))\r\n                : null}\r\n            </Box>\r\n          </Box>\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container: {\r\n    marginBottom: theme.spacing(5),\r\n  },\r\n  value: {\r\n    fontWeight: 500,\r\n  },\r\n  statisticsName: {\r\n    color: \"#797979\",\r\n    fontWeight: \"300\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: 220,\r\n    },\r\n    width: 100,\r\n  },\r\n}));\r\n\r\nexport default PokemonView;\r\n","import React from \"react\";\r\nimport { Container, Typography, Box } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst InfoView = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <Container maxWidth=\"md\">\r\n      <Box mt={4} className={classes.box}>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Użyte technologie:\r\n        </Typography>\r\n        <ul>\r\n          {[\"React\", \"Redux\", \"Material-UI\", \"React-Roter\", \"Axios\"].map(\r\n            (item) => (\r\n              <li key={item}>\r\n                <Typography>{item}</Typography>\r\n              </li>\r\n            )\r\n          )}\r\n          <li>\r\n            <Typography>\r\n              <a\r\n                href=\"https://pokeapi.co/\"\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className={classes.link}\r\n              >\r\n                PokeApi\r\n              </a>\r\n            </Typography>\r\n          </li>\r\n        </ul>\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Działanie aplikacji:\r\n          <ul>\r\n            <li>\r\n              <Typography>\r\n                Aplikacja na głównej stronie wyświetla listę wszystkich\r\n                pokemonów.\r\n              </Typography>\r\n            </li>\r\n            <li>\r\n              <Typography>Na samym dole znajduję się paginacja.</Typography>\r\n            </li>\r\n            <li>\r\n              <Typography>\r\n                Po lewej stronie na szerokich urządzeniach mamy dostepną sekcje\r\n                do filtrowania listy, w przypadku mniejszych urządzeń trzeba\r\n                kliknąć pokaż filtry.\r\n              </Typography>\r\n            </li>\r\n            <li>\r\n              <Typography>\r\n                Aplikacja filtruję pokemony ze względu na ich typ, jest także\r\n                możliwość sortowania pokemonów po ich nazwie.\r\n              </Typography>\r\n            </li>\r\n            <li>\r\n              <Typography>\r\n                Aplikacja umożliwia także zanaczenie ile pokemonów ma być\r\n                dostępnych na stronie.\r\n              </Typography>\r\n            </li>\r\n            <li>\r\n              <Typography>\r\n                Kliknięcie w pokemona przenosi do nowej strony.\r\n              </Typography>\r\n            </li>\r\n            <li>\r\n              <Typography>\r\n                Na osobnej stronie dostępna jest także wyszukiwarka pokemonów\r\n              </Typography>\r\n            </li>\r\n          </ul>\r\n        </Typography>\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default InfoView;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  link: {\r\n    color: \"#3853ea\",\r\n  },\r\n  box: {\r\n    [theme.breakpoints.up(\"md\")]: {\r\n      marginTop: 70,\r\n    },\r\n  },\r\n}));\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Box, InputBase, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport {\r\n  searchPokemon,\r\n  clearSearchPokemons,\r\n} from \"./../redux/actions/pokemonsActions\";\r\nimport PokemonList from \"./../components/pokemonList/PokemonList\";\r\n\r\nconst SearchView = () => {\r\n  const dispatch = useDispatch();\r\n  const pokemonsFound = useSelector((state) => state.pokemons.pokemonsFound);\r\n  const [searchTxt, setSearchTxt] = useState(\"\");\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n  const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    dispatch(clearSearchPokemons());\r\n  }, []);\r\n\r\n  const handleOnSubmit = (e) => {\r\n    setIsSubmit(true);\r\n    e.preventDefault();\r\n    if (searchTxt.length > 2) {\r\n      dispatch(searchPokemon(searchTxt));\r\n    }\r\n  };\r\n\r\n  const handleTxtValue = (e) => {\r\n    setIsSubmit(false);\r\n    setSearchTxt(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Box mt={4} mb={4}>\r\n        <form onSubmit={handleOnSubmit} className={classes.form}>\r\n          <Box display=\"flex\">\r\n            <InputBase\r\n              autoFocus={true}\r\n              className={classes.input}\r\n              placeholder=\"wpisz przynajmniej trzy znaki\"\r\n              inputProps={{ \"aria-label\": \"wpisz nazwe szukanego pokemona\" }}\r\n              value={searchTxt}\r\n              onChange={handleTxtValue}\r\n            />\r\n\r\n            <Button color=\"primary\" type=\"submit\" variant=\"contained\">\r\n              search\r\n            </Button>\r\n          </Box>\r\n          {isSubmit && searchTxt.length < 3 ? (\r\n            <Box mt={4}>\r\n              <Alert severity=\"error\">wpisz przynajmniej 3 znaki</Alert>\r\n            </Box>\r\n          ) : null}\r\n        </form>\r\n      </Box>\r\n      {pokemonsFound.length > 0 ? (\r\n        <PokemonList pokemonListForRender={pokemonsFound} />\r\n      ) : (\r\n        <>\r\n          {isSubmit && searchTxt.length > 2 && (\r\n            <Box mt={4}>\r\n              <Alert severity=\"error\">nic nie znaleziono</Alert>\r\n            </Box>\r\n          )}\r\n        </>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  input: {\r\n    backgroundColor: \"#F5F5F5\",\r\n    width: \"100%\",\r\n    padding: \"8px 9px 9px\",\r\n    borderRadius: \"4px\",\r\n    marginRight: 15,\r\n  },\r\n}));\r\n\r\nexport default SearchView;\r\n","import React from \"react\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\nconst NoMatch = () => {\r\n  return (\r\n    <Container>\r\n      <p>nie ma takiej strony</p>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default NoMatch;\r\n","import React, { useState } from \"react\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\"; // HashRouter na potrzeby gh pages\nimport Navbar from \"./components/layout/Navbar\";\nimport MobileMenuDrawer from \"./components/layout/MobileMenuDrawer\";\nimport RootView from \"./views/RootView\";\nimport PokemonView from \"./views/PokemonView\";\nimport InfoView from \"./views/InfoView\";\nimport Search from \"./views/SearchView\";\nimport NoMatch from \"./views/NoMatch\";\n\nfunction App() {\n  const [mobileOpen, setMobileOpen] = useState(false);\n\n  const handleDrawerToggle = () => {\n    setMobileOpen(!mobileOpen);\n  };\n\n  return (\n    <>\n      <HashRouter>\n        <Navbar handleDrawerToggle={handleDrawerToggle} />\n        <MobileMenuDrawer\n          mobileOpen={mobileOpen}\n          handleDrawerToggle={handleDrawerToggle}\n        />\n        <Switch>\n          <Route exact path=\"/\" component={RootView} />\n          <Route path=\"/pokemon/:name\" component={PokemonView} />\n          <Route path=\"/info\" component={InfoView} />\n          <Route path=\"/search\" component={Search} />\n          <Route path=\"*\" component={NoMatch} />\n        </Switch>\n      </HashRouter>\n    </>\n  );\n}\n\nexport default App;\n","import {\r\n  POKEMONS_FETCH_SUCCESS,\r\n  POKEMONS_TYPE_FETCH_SUCCESS,\r\n  SET_DATA_FOR_RENDER,\r\n  SINGLE_POKEMON_FETCH_SUCCESS,\r\n  SORT,\r\n  SET_PAGE_LIMIT,\r\n  SEARCH_POKEMONS,\r\n  CLEAR_SEARCH_POKEMONS,\r\n} from \"./../../utils/constants/pokemonsReducerConstants\";\r\n\r\nimport { BASIC, A_Z } from \"./../../utils/constants/sortTypeConstants\";\r\n\r\nexport const initialState = {\r\n  allPokemons: [],\r\n  pokemonList: [],\r\n  pokemonListForRender: [],\r\n  pokemonsFound: [],\r\n  singlePokemon: {},\r\n  pokemonPagination: {\r\n    currentPage: 1,\r\n    pokemonsCount: 0,\r\n    totalPages: 0,\r\n  },\r\n  formOptions: {\r\n    type: \"all\",\r\n    sort: BASIC,\r\n    url: \"\",\r\n    name: \"\",\r\n    pageLimit: 20,\r\n  },\r\n};\r\n\r\nconst pokemonsReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case POKEMONS_FETCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        allPokemons: [...action.payload.results],\r\n        pokemonList: action.payload.results,\r\n        pokemonPagination: {\r\n          ...state.pokemonPagination,\r\n          pokemonsCount: action.payload.count,\r\n        },\r\n        formOptions: { ...state.formOptions, type: \"all\", sort: BASIC },\r\n      };\r\n    case POKEMONS_TYPE_FETCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        pokemonList: action.payload.pokemon,\r\n        pokemonPagination: {\r\n          ...state.pokemonPagination,\r\n          pokemonsCount: action.payload.count,\r\n        },\r\n        formOptions: {\r\n          ...state.formOptions,\r\n          type: action.payload.name,\r\n          sort: BASIC,\r\n          url: action.payload.url,\r\n          name: action.payload.name,\r\n        },\r\n      };\r\n    case SET_DATA_FOR_RENDER:\r\n      const offset = (action.payload - 1) * state.formOptions.pageLimit;\r\n      const totalPages = Math.ceil(\r\n        state.pokemonPagination.pokemonsCount / state.formOptions.pageLimit\r\n      );\r\n      return {\r\n        ...state,\r\n        pokemonListForRender: state.pokemonList.slice(\r\n          offset,\r\n          offset + state.formOptions.pageLimit\r\n        ),\r\n        pokemonPagination: {\r\n          ...state.pokemonPagination,\r\n          currentPage: action.payload,\r\n          totalPages,\r\n        },\r\n      };\r\n    case SINGLE_POKEMON_FETCH_SUCCESS:\r\n      return {\r\n        ...state,\r\n        singlePokemon: action.payload,\r\n      };\r\n    case SORT:\r\n      return {\r\n        ...state,\r\n        pokemonList: state.pokemonList.sort(compare(action.payload)),\r\n        formOptions: { ...state.formOptions, sort: action.payload },\r\n      };\r\n    case SET_PAGE_LIMIT:\r\n      return {\r\n        ...state,\r\n        formOptions: { ...state.formOptions, pageLimit: action.payload },\r\n      };\r\n    case SEARCH_POKEMONS:\r\n      return {\r\n        ...state,\r\n        pokemonsFound: state.allPokemons.filter(\r\n          (pokemon) =>\r\n            pokemon.name\r\n              .trim()\r\n              .toUpperCase()\r\n              .indexOf(action.payload.toUpperCase()) > -1\r\n        ),\r\n      };\r\n    case CLEAR_SEARCH_POKEMONS:\r\n      return {\r\n        ...state,\r\n        pokemonsFound: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst compare = (sort) => (a, b) => {\r\n  const A = a.name ? a.name.toUpperCase() : a.pokemon.name.toUpperCase(); // pokemon.name przy type\r\n  const B = b.name ? b.name.toUpperCase() : b.pokemon.name.toUpperCase();\r\n\r\n  let comparison = 0;\r\n  if (A > B) {\r\n    comparison = 1;\r\n  } else if (A < B) {\r\n    comparison = -1;\r\n  }\r\n  return sort === A_Z ? comparison : comparison * -1;\r\n};\r\n\r\nexport default pokemonsReducer;\r\n\r\n// case \"SAVE_POKEMON\":\r\n//   console.log(action.payload);\r\n//   return {\r\n//     ...state,\r\n//     savedPokemons: [...state.savedPokemons, action.payload],\r\n//   };\r\n// case \"REMOVE_SAVED_POKEMON\":\r\n//   console.log(action.payload);\r\n//   return {\r\n//     ...state,\r\n//     savedPokemons: state.savedPokemons.filter(\r\n//       (pokemon) => action.payload !== pokemon.name\r\n//     ),\r\n//   };\r\n","import {\r\n  ASYNC_ACTION_START,\r\n  ASYNC_ACTION_FINISH,\r\n  ASYNC_ACTION_ERROR,\r\n} from \"./../../utils/constants/asyncReducerConstants\";\r\n\r\nexport const initialState = {\r\n  isLoading: false,\r\n  isError: false,\r\n};\r\n\r\nconst asyncReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ASYNC_ACTION_START: {\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n        isError: false,\r\n      };\r\n    }\r\n    case ASYNC_ACTION_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: true,\r\n      };\r\n    case ASYNC_ACTION_FINISH:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        isError: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default asyncReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport pokemonsReducer from \"./pokemonsReducer\";\r\nimport asyncReducer from \"./asyncReducer\";\r\n\r\nexport default combineReducers({\r\n  pokemons: pokemonsReducer,\r\n  async: asyncReducer,\r\n});\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"typeface-roboto\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./redux/reducers/index\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\n\nimport * as serviceWorker from \"./serviceWorker\";\n\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(thunk))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}